/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LEFT_SYM 1
#define RIGHT_SYM 2
#define NUM 3
#define MOVE 4
#define OS_WM 5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        kb_off {
            bindings = <&soft_off>;
            key-positions = <11 0>;
        };

        caps_next {
            bindings = <&caps_word>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&none  &kp SQT     &kp COMMA   &kp DOT      &kp P        &kp Y         &kp F       &kp G      &kp C        &kp R       &kp L       &none
&none  &hm LGUI A  &hm LALT O  &hm LCTRL E  &lt 2 U      &kp I         &kp D       &lt 1 H    &hm LCTRL T  &hm LALT N  &hm LGUI S  &none
&none  &kp TAB     &kp Q       &kp J        &lt 3 K      &kp X         &kp B       &kp M      &kp W        &kp V       &kp Z       &none
                               &lt 4 ESC    &lt 5 SPACE  &sk LSHIFT    &sk LSHIFT  &lt 5 RET  &lt 4 BSPC
            >;
        };

        left_sym_layer {
            display-name = "lSym";
            bindings = <
&none  &kp QUESTION   &kp EXCL  &kp LEFT_BRACKET      &kp PIPE   &kp RIGHT_BRACKET        &none  &none  &none  &none  &none  &none
&none  &kp BACKSLASH  &kp HASH  &kp LEFT_PARENTHESIS  &kp SLASH  &kp RIGHT_PARENTHESIS    &none  &none  &none  &none  &none  &none
&none  &kp GRAVE      &kp AT    &kp LEFT_BRACE        &kp TILDE  &kp RIGHT_BRACE          &none  &none  &none  &none  &none  &none
                                &none                 &none      &none                    &none  &none  &none
            >;
        };

        right_sym_layer {
            display-name = "rSym";
            bindings = <
&none  &none  &none  &none  &none  &none    &none     &kp DOLLAR  &kp PERCENT  &kp AMPS   &none      &none
&none  &none  &none  &none  &none  &none    &kp PLUS  &kp MINUS   &kp UNDER    &kp ASTRK  &kp EQUAL  &none
&none  &none  &none  &none  &none  &none    &none     &kp SEMI    &kp COLON    &none      &kp CARET  &none
                     &none  &none  &none    &none     &none       &none
            >;
        };

        num_layer {
            label = "num";
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                     &none  &none  &none    &none  &none         &kp N0
            >;
        };

        move_layer {
            label = "move";
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none     &kp UP_ARROW    &none            &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none     &none           &none            &none  &none
                     &none  &none  &none    &none  &none     &none
            >;
        };

        os_wm_layer {
            label = "os_wm";
            bindings = <
&bt BT_SEL 0  &none  &kp LG(N4)        &kp LG(N5)        &kp LG(N6)  &none    &kp LG(F)      &none         &kp LG(UP_ARROW)    &none          &none  &bt BT_SEL 3
&bt BT_SEL 1  &none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(N3)  &none    &kp LG(SPACE)  &kp LG(LEFT)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT)  &none  &bt BT_SEL 4
&bt BT_SEL 2  &none  &kp LG(Q)         &none             &none       &none    &none          &none         &none               &none          &none  &bt BT_CLR_ALL
            >;
        };
    };
};